
1，操控浏览器的能力

JavaScript的发明目的，就是作为浏览器的内置脚本语言，为网页开发者提供操控浏览器的能力。
它是目前唯一一种通用的浏览器脚本语言，所有主流浏览器全部支持。它可以让网页呈现各种特殊效果，为用户提供良好的互动体验。


2，广泛的使用领域

近年来，JavaScript的使用范围，慢慢超越了浏览器，正在向通用的系统语言发展。

（1）浏览器的平台化

随着HTML 5的出现，浏览器本身的功能越来越强，不再仅仅能浏览网页，而是越来越像一个平台，
JavaScript因此得以调用许多系统功能，比如操作本地文件、操作图片、调用摄像头和麦克风等等。
这使得JavaScript可以完成许多以前无法想象的事情。

（2）Node.js

Node.js 项目使得JavaScript可以用于开发服务器端的大型项目，网站的前后端都用JavaScript开发已经成为了现实。
有些嵌入式平台（Raspberry Pi）能够安装Node.js，于是JavaScript就能为这些平台开发应用程序。

（3）数据库操作

JavaScript甚至也可以用来操作数据库。NoSQL数据库这个概念，本身就是在JSON（JavaScript Object Notation，JavaScript对象表示法）格式的基础上诞生的，
大部分NoSQL数据库允许JavaScript直接操作。基于SQL语言的开源数据库PostgreSQL支持JavaScript作为操作语言，可以部分取代SQL查询语言。

（4）跨移动平台

PhoneGap项目使得JavaScript可以开发在多种移动平台（iOS和Android）上使用的应用程序。
Mozilla基金会的手机操作系统Firefox OS，更是直接将JavaScript作为操作系统的平台语言。

（5）内嵌脚本语言

越来越多的应用程序，将JavaScript作为内嵌的脚本语言，比如Adobe公司的著名PDF阅读器Acrobat、Linux桌面环境GNOME 3。

（6）跨平台的桌面应用程序

Chromium OS、Windows 8等操作系统直接支持JavaScript编写应用程序。
Mozilla的Open Web Apps项目、Google的Chrome App项目、以及TideSDK项目，可以用来编写运行于Windows、Mac OS和Android等多个桌面平台的程序，不依赖浏览器。


3，强大的性能

JavaScript的性能优势体现在以下方面。

（1）灵活的语法，表达力强。

JavaScript既支持类似C语言清晰的过程式编程，也支持灵活的函数式编程，可以用来写并发处理（concurrent）。
这些语法特性已经被证明非常强大，可以用于许多场合，尤其适用非同步编程。

JavaScript的所有值都是对象，这为程序员提供了灵活性和便利性。因为你可以很方便地、按照需要随时创造数据结构，不用进行麻烦的预定义。

JavaScript的标准还在快速进化中，并不断合理化，并添加更适用的语法特性。

（2）支持编译运行。

JavaScript语言本身，虽然是一种解释型语言，但是在现代浏览器中，JavaScript都是编译后运行。
程序会被高度优化，运行效率接近二进制程序。而且，JavaScript引擎正在快速发展，性能将越来越好。

（3）事件驱动和非阻塞式设计。

JavaScript程序可以采用事件驱动（event-driven）和非阻塞式（non-blocking）设计，在服务器端适合高并发环境，普通的硬件就可以承受很大的访问量。